// 跑两个size-1长度的子vector取最大值就好了，其实可以不用开数组

class Solution {
public:
    int rob(vector<int>& nums) {
        const size_t& sz = nums.size();
        if (sz == 0) return 0;
        if (sz == 1) return nums[0];
        if (sz == 2) return std::max(nums[0], nums[1]);
        return std::max(rob(nums, 0, sz - 1), rob(nums, 1, sz - 1));
    }
    
    int rob(vector<int>& nums, const size_t& off, const size_t& size) {        
        int profit[size];
        profit[0] = nums[off];
        profit[1] = std::max(nums[off], nums[off + 1]);
        for (size_t i = 2; i < size; ++i) {
            profit[i] = std::max(profit[i - 1], profit[i - 2] + nums[off + i]);
        }
        return profit[size - 1];
    }
};
